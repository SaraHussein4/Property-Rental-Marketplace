@model FindPropertyViewModel
@{
    ViewData["Title"] = "FindProperty";
    Layout = "_UserLayout";
    bool isFirst = true;

}
@section Styles {
    <link rel="stylesheet" href="~/css/userStyle.css">
    <style>
        .card-container {
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            overflow: hidden;
            background: #fff;
            box-shadow: 0 2px 6px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
            position: relative;
            cursor: pointer;
        }

            .card-container:hover {
                transform: translateY(-5px);
                box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            }

        .carousel-inner img {
            object-fit: cover;
            height: 200px;
            width: 100%;
        }

        .price {
            position: absolute;
            top: 10px;
            left: 10px;
            background: rgba(0,0,0,0.7);
            color: white;
            padding: 4px 8px;
            border-radius: 5px;
            font-weight: bold;
            font-size: 0.9rem;
            z-index: 1;
        }

        .favourite {
            position: absolute;
            top: 10px;
            right: 10px;
            color: white;
            background: rgba(0,0,0,0.3);
            width: 24px;
            height: 24px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            z-index: 1;
        }

            .favourite:hover {
                background: rgba(255,255,255,0.3);
            }

        .card-title {
            font-size: 1rem;
            font-weight: 600;
            color: #333;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .card-address {
            color: #666;
            font-size: 0.8rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .d-flex.justify-content-between.align-items-center {
            border-top: 1px solid #f0f0f0;
            padding-top: 8px;
            margin-top: 8px;
        }

            .d-flex.justify-content-between.align-items-center > div {
                flex: 1;
                text-align: center;
            }

            .d-flex.justify-content-between.align-items-center i {
                font-size: 1rem;
                color: #555;
            }

            .d-flex.justify-content-between.align-items-center .small {
                font-size: 0.8rem;
                color: #666;
            }

        #countryFilters {
            scrollbar-width: thin;
            scrollbar-color: #888 #f1f1f1;
        }

            #countryFilters::-webkit-scrollbar {
                width: 6px;
            }

            #countryFilters::-webkit-scrollbar-track {
                background: #f1f1f1;
            }

            #countryFilters::-webkit-scrollbar-thumb {
                background-color: #888;
                border-radius: 3px;
            }

        #countrySearch {
            border-radius: 20px;
            padding: 8px 15px;
            margin-bottom: 10px;
        }
    </style>



}

<div class="container tab-section" style="margin-top:130px;min-height:80vh">
    <div class="row">
        <div class="col-12">
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                @foreach (var item in Model.PropertyTypes)
                {
                    <button class="tab-btn @(isFirst?"active":"")" id="nav-@item.Id" data-bs-toggle="tab" data-bs-target="#nav-@item.Id" type="button" role="tab" aria-controls="nav-@item.Id" data-id="@item.Id" aria-selected="@(isFirst.ToString())">@item.Name</button>
                    isFirst = false;
                }
            </div>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-lg-8 order-lg-1 order-2">
            <div class="tab-content" id="property-tab-content">
                <div id="property-list" class="row g-4">
                    @foreach (var property in Model.InitialProperties)
                    {
                        var carouselId = "carousel_" + property.Id;
                        var images = property.Images.ToList();

                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="card-container h-100">
                                <div id="@carouselId" class="carousel carousel-dark slide" data-bs-ride="carousel">
                                    <div class="carousel-indicators">
                                        @for (int i = 0; i < images.Count; i++)
                                        {
                                            <button type="button" data-bs-target="#@carouselId" data-bs-slide-to="@i"
                                                    class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")"
                                                    aria-label="Slide @(i + 1)">
                                            </button>
                                        }
                                    </div>

                                    <div class="carousel-inner">
                                        @for (int i = 0; i < images.Count; i++)
                                        {
                                            var img = images[i];
                                            var imagePath = img.Path.StartsWith("http") ? img.Path : Url.Content("~/images/" + img.Path);

                                            <div class="carousel-item @(i == 0 ? "active" : "") image-container" data-bs-interval="5000">
                                                <img src="@imagePath" class="d-block w-100" />
                                            </div>
                                        }
                                    </div>
                                </div>

                                <div class="body p-3" data-propertyId="@property.Id" onclick="window.location.href='@Url.Action("Details", "User", new { id = property.Id })'">
                                    <div class="price">@property.FeesPerMonth USD</div>
                                    <div class="favourite"><i class="fa-regular fa-heart"></i></div>

                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <p class="card-title mb-0 flex-grow-1 pe-2">@property.Name</p>
                                        <p class="card-address text-muted small mb-0 text-end">@property.Address</p>
                                    </div>

                                    <div class="d-flex justify-content-between align-items-center mt-2">
                                        <div class="text-center px-1">
                                            <i class="fa-solid fa-bed"></i>
                                            <span class="small ms-1">@property.BedRooms</span>
                                        </div>
                                        <div class="text-center px-1">
                                            <i class="fa-solid fa-sink"></i>
                                            <span class="small ms-1">@property.BathRooms</span>
                                        </div>
                                        <div class="text-center px-1">
                                            <i class="fa-solid fa-car"></i>
                                            <span class="small ms-1">@property.GarageSlots</span>
                                        </div>
                                        <div class="text-center px-1">
                                            <i class="fa-solid fa-paw"></i>
                                            <span class="small ms-1">@(property.BetsAllowd)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-4 order-lg-2 order-1 mb-4">
            <div class="card filter-card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#filtersCollapse">
                            <i class="fa fa-filter"></i> Filter Properties
                        </button>
                    </h5>
                </div>
                <div id="filtersCollapse" class="collapse show">
                    <div class="card-body">
                        <div class="accordion" id="filterAccordion">

                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#priceCollapse">
                                        Price Range
                                    </button>
                                </h2>
                                <div id="priceCollapse" class="accordion-collapse collapse show" data-bs-parent="#filterAccordion">
                                    <div class="accordion-body scrollable-accordion">
                                        <div class="form-check">
                                            <input class="form-check-input price-filter" type="checkbox" value="1000-2000" id="price1">
                                            <label class="form-check-label" for="price1">
                                                $1000 - $2000
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input price-filter" type="checkbox" value="2000-3000" id="price2">
                                            <label class="form-check-label" for="price2">
                                                $2000 - $3000
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input price-filter" type="checkbox" value="4000-5000" id="price3">
                                            <label class="form-check-label" for="price3">
                                                $4000 - $5000
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input price-filter" type="checkbox" value="6000+" id="price4">
                                            <label class="form-check-label" for="price4">
                                                $6000 and more
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#countryCollapse">
                                        Country
                                    </button>
                                </h2>
                                <div id="countryCollapse" class="accordion-collapse collapse" data-bs-parent="#filterAccordion">
                                    <div class="accordion-body scrollable-accordion">
                                        <div class="mb-3">
                                            <input type="text" id="countrySearch" class="form-control" placeholder="Search countries...">
                                        </div>
                                        <div id="countryFilters" style="max-height: 300px; overflow-y: auto;">
                                            <div class="text-center py-3">
                                                <div class="spinner-border spinner-border-sm" role="status">
                                                    <span class="visually-hidden">Loading countries...</span>
                                                </div>
                                                <small class="text-muted d-block mt-1">Loading countries...</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#bedroomsCollapse">
                                        Number of Bedrooms
                                    </button>
                                </h2>
                                <div id="bedroomsCollapse" class="accordion-collapse collapse" data-bs-parent="#filterAccordion">
                                    <div class="accordion-body scrollable-accordion">
                                        <div class="form-check">
                                            <input class="form-check-input bedroom-filter" type="checkbox" value="1" id="bed1">
                                            <label class="form-check-label" for="bed1">
                                                1
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input bedroom-filter" type="checkbox" value="2" id="bed2">
                                            <label class="form-check-label" for="bed2">
                                                2
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input bedroom-filter" type="checkbox" value="3" id="bed3">
                                            <label class="form-check-label" for="bed3">
                                                3
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input bedroom-filter" type="checkbox" value="4" id="bed4">
                                            <label class="form-check-label" for="bed4">
                                                4
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input bedroom-filter" type="checkbox" value="5" id="bed5">
                                            <label class="form-check-label" for="bed5">
                                                5
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input bedroom-filter" type="checkbox" value="6+" id="bed6">
                                            <label class="form-check-label" for="bed6">
                                                5+
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="d-grid gap-2 d-md-block mt-3">
                            <button id="applyFilters" class="btn btn-primary">Apply Filters</button>
                            <button id="resetFilters" class="btn btn-outline-secondary ms-md-2 mt-2 mt-md-0">Reset</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function() {
            let currentFilters = {
                priceRanges: [],
                countries: [],
                bedrooms: [],
                propertyType: $('.tab-btn.active').data('id')
            };

            function loadCountries() {

                $('#countryFilters').html(`
                    <div class="text-center py-3">
                        <div class="spinner-border spinner-border-sm" role="status">
                            <span class="visually-hidden">Loading countries...</span>
                        </div>
                        <small class="text-muted d-block mt-1">Loading countries...</small>
                    </div>
                `);


                $.ajax({
                    url: 'https://api.countrystatecity.in/v1/countries',
                    headers: {
                        "X-CSCAPI-KEY": "WndlbUtKQVNRbm5tdnMyd2NQWWlpUFgyTkJ3YkNMbkpJeFF2c1Q1aA=="
                    },
                    timeout: 10000,
                    success: function(countries) {
                        if (countries && countries.length > 0) {
                            window.countryList = countries;
                            renderCountries(countries);
                            setupCountrySearch();
                        } else {
                            showCountryError("No countries data received");
                        }
                    },
                    error: function(xhr, status, error) {
                        let errorMsg = "Failed to load countries. ";
                        if (xhr.status === 0) {
                            errorMsg += "Network error or CORS issue.";
                        } else {
                            errorMsg += `Server responded with ${xhr.status}: ${error}`;
                        }
                        showCountryError(errorMsg);


                        const cachedCountries = localStorage.getItem('cachedCountries');
                        if (cachedCountries) {
                            try {
                                window.countryList = JSON.parse(cachedCountries);
                                renderCountries(window.countryList);
                                setupCountrySearch();
                                showCountryError("Using cached data. " + errorMsg, 'warning');
                            } catch(e) {
                                console.error("Failed to parse cached countries", e);
                            }
                        }
                    }
                });
            }

            function renderCountries(countries) {
                if (!countries || countries.length === 0) {
                    $('#countryFilters').html(`
                        <div class="alert alert-warning py-2">
                            No countries available
                        </div>
                    `);
                    return;
                }

                let countryHtml = countries.map(country => `
                    <div class="form-check">
                        <input class="form-check-input country-filter"
                               type="checkbox"
                               value="${country.iso2}"
                               id="country-${country.iso2}">
                        <label class="form-check-label" for="country-${country.iso2}">
                            ${country.name}
                        </label>
                    </div>
                `).join('');

                $('#countryFilters').html(countryHtml);


                try {
                    localStorage.setItem('cachedCountries', JSON.stringify(countries));
                } catch(e) {
                    console.warn("Failed to cache countries", e);
                }
            }

            function setupCountrySearch() {
                $('#countrySearch').off('input').on('input', function() {
                    const searchTerm = $(this).val().toLowerCase();
                    const filteredCountries = window.countryList.filter(country =>
                        country.name.toLowerCase().includes(searchTerm));
                    renderCountries(filteredCountries);
                });
            }

            function showCountryError(message, type = 'danger') {
                $('#countryFilters').html(`
                    <div class="alert alert-${type} py-2">
                        ${message}
                        <button class="btn btn-sm btn-outline-${type} float-end"
                                onclick="loadCountries()">
                            Retry
                        </button>
                    </div>
                `);
            }


            $('#countryCollapse').on('shown.bs.collapse', function() {
                if (!window.countryList || window.countryList.length === 0) {
                    loadCountries();
                }
            });

            function loadProperties() {
                const filters = {
                    typeId: currentFilters.propertyType,
                    priceRanges: currentFilters.priceRanges,
                    countries: currentFilters.countries,
                    bedrooms: currentFilters.bedrooms
                };

                $.ajax({
                    url: '/User/GetFilteredProperties',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(filters),
                    success: function(data) {
                        renderProperties(data);
                    },
                    error: function(xhr, status, error) {
                        console.error("Error:", status, error);
                        $('#property-list').html(
                            `<div class="alert alert-danger">
                                Failed to load properties.
                                ${xhr.responseJSON ? xhr.responseJSON.message : ''}
                            </div>`
                        );
                    }
                });
            }

            function renderProperties(properties) {
                let content = '';
                if (properties.length === 0) {
                    content = '<div class="alert alert-warning col-12">No properties found.</div>';
                } else {
                    properties.forEach(p => {
                        const images = (p.images && p.images.length > 0) ? p.images : [{ path: "/images/default.jpg" }];
                        const carouselItems = images.map((img, i) => `
                            <div class="carousel-item ${i === 0 ? 'active' : ''}">
                                <img src="${img.path}" class="d-block w-100" style="height: 200px; object-fit: cover;" />
                            </div>`).join('');

                        const indicators = images.map((_, i) => `
                            <button type="button" data-bs-target="#carousel_${p.id}" data-bs-slide-to="${i}"
                                    class="${i === 0 ? 'active' : ''}" aria-current="${i === 0 ? 'true' : 'false'}"
                                    aria-label="Slide ${i + 1}"></button>`).join('');

                        content += `
                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="card-container h-100" >
                                <div id="carousel_${p.id}" class="carousel carousel-dark slide" data-bs-ride="carousel">
                                    <div class="carousel-indicators">
                                        ${indicators}
                                    </div>
                                    <div class="carousel-inner">
                                        ${carouselItems}
                                    </div>
                                </div>

                                <div class="body p-3" data-propertyId="${p.id}" onclick="window.location.href='/User/Details/${p.id}'">
                                    <div class="price">${p.feesPerMonth} USD</div>
                                    <div class="favourite"><i class="fa-regular fa-heart"></i></div>

                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <p class="card-title mb-0 flex-grow-1 pe-2">${p.name}</p>
                                        <p class="card-address text-muted small mb-0 text-end">${p.address}</p>
                                    </div>

                                    <div class="d-flex justify-content-between align-items-center mt-2">
                                        <div class="text-center px-1">
                                            <i class="fa-solid fa-bed"></i>
                                            <span class="small ms-1">${p.bedRooms ?? 0}</span>
                                        </div>
                                        <div class="text-center px-1">
                                            <i class="fa-solid fa-sink"></i>
                                            <span class="small ms-1">${p.bathRooms ?? 0}</span>
                                        </div>
                                        <div class="text-center px-1">
                                            <i class="fa-solid fa-car"></i>
                                            <span class="small ms-1">${p.garageSlots ?? 0}</span>
                                        </div>
                                        <div class="text-center px-1">
                                            <i class="fa-solid fa-paw"></i>
                                            <span class="small ms-1">${p.petsAllowed ? 'Yes' : 'No'}</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>`;
                    });
                }
                $('#property-list').html(content);
            }

            $('.tab-btn').click(function() {
                $('.tab-btn').removeClass('active');
                $(this).addClass('active');
                currentFilters.propertyType = $(this).data('id');
                loadProperties();
            });

            $('#applyFilters').click(function() {
                currentFilters.priceRanges = [];
                $('.price-filter:checked').each(function() {
                    currentFilters.priceRanges.push($(this).val());
                });

                currentFilters.countries = [];
                $('.country-filter:checked').each(function() {
                    currentFilters.countries.push($(this).val());
                });

                currentFilters.bedrooms = [];
                $('.bedroom-filter:checked').each(function() {
                    currentFilters.bedrooms.push($(this).val());
                });

                loadProperties();
            });

            $('#resetFilters').click(function() {
                $('.price-filter, .country-filter, .bedroom-filter').prop('checked', false);
                currentFilters = {
                    priceRanges: [],
                    countries: [],
                    bedrooms: [],
                    propertyType: $('.tab-btn.active').data('id')
                };
                loadProperties();
            });


            loadCountries();
            loadProperties();
        });
    </script>
}
}